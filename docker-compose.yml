services:
  mongo:
    image: mongo:7.0
    container_name: million-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./infra/docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - million-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/million --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: million-backend
    ports:
      - "5001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - MongoDB__ConnectionString=mongodb://mongo:27017
      - MongoDB__DatabaseName=million
      - MongoDB__PropertiesCollectionName=properties
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - million-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/properties/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=http://localhost:5001
    container_name: million-frontend
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - million-network

networks:
  million-network:
    driver: bridge

volumes:
  mongo-data:

